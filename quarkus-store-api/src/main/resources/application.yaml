# datasource configuration
quarkus:
  application:
    name: "Quarkus Store API"
  http:
    port: 8082
    read-timeout: 30m
    enable-compression: true
  package:
    type: uber-jar
  datasource:
    db-kind: postgresql
    username: quarkus
    password: quarkus
    jdbc:
      url: "jdbc:postgresql://localhost:5432/q_store"
  hibernate-orm:
    database:
      generation: drop-and-create
    packages: demo.quarkus.store.model
    sql-load-script: import.sql
  oidc:
    enabled: true
    auth-server-url: "http://localhost:8180/realms/qstore"
    "client-id": "qstore-client"
    credentials:
      secret: "qstore"
    tls:
      verification: none
    roles:
      source: "accesstoken"
      role-claim-path: "resource_access/qstore-client/roles"
    token:
      issuer: any
    "application-type": "service"
  log:
    level: DEBUG
    min-level: TRACE
    category:
      "org.jboss":
        level: WARN
      "org.hibernate":
        level: INFO
      "org.apache.http":
        level: WARN
      "io.quarkus":
        level: WARN
      "org.infinispan.quarkus":
        level: WARN
      "org.postgresql":
        level: WARN
      "io.smallrye":
        level: WARN
      "org.eclipse":
        level: WARN
      "io.netty":
        level: WARN
      "demo.quarkus.store":
        level: TRACE
    console:
      enable: true
      level: DEBUG
    file:
      level: DEBUG
      enable: true
      path: "log/quarkus-store-api.log"
      format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
      rotation:
        max-backup-index: 5
        max-file-size: 10M
  swagger-ui:
    always-include: true

"%test":
  quarkus:
    datasource:
      db-kind: h2
      jdbc:
        url: "jdbc:h2:file:./target/data/database;AUTO_SERVER=true;DB_CLOSE_DELAY=-1"
    hibernate-orm:
      dialect: org.hibernate.dialect.H2Dialect
      log:
        sql: true

"%prod":
  quarkus:
    hibernate-orm:
      sql-load-script: no-file